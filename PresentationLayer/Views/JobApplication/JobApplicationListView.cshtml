@using X.PagedList.Mvc
@model PresentationLayer.Models.JobApplicationListViewModel

@{
    ViewBag.Title = "jobApplicationListView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head{
    @Styles.Render("~/Content/css/tree.css")
    @Styles.Render("~/Content/css/PagedList.css")
    @Styles.Render("~/Content/themes/base/jquery-ui.css")
}

<div class="row w-100 p-3">
    <div class="col-lg-12">
        @using (Html.BeginForm())
        {                 
            <div class="form-group form-row col-md-5">
                @Html.LabelFor(model => model.Filter.SortCriteria, "Sort by:", new { @class = "col-form-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Filter.SortCriteria, Model.AllSortCriteria, "Select...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Filter.SortCriteria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-check form-row col-md-5">
                @Html.LabelFor(model => model.Filter.SortAscending, "Ascending", new { @class = "form-check-label" })
                @Html.CheckBoxFor(model => model.Filter.SortAscending, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.ValidationMessageFor(model => model.Filter.SortAscending, "", new { @class = "text-danger" })
            </div>

            <div class="row btn-toolbar justify-content-around" role="toolbar" style="margin-bottom:5px">
                <div class="btn-group">
                    <input type="button" class="btn btn-danger" value="Clear" onclick="resetRange();location.href = '@Url.Action("ClearFilter", "JobApplication")'" />
                </div>
                <div class="btn-group">
                    <button class="btn btn-success" id="btnSubmit" type="submit" onclick="saveRange()">Filter </button>
                </div>
            </div>
        }

    </div>
</div>
<div class="row w-100 p-3">
    <div class="col-lg-12">
        <div class="list-group text-center">
            @{foreach (var jobApplication in Model.JobApplications)
                {                  
                        <div class="list-group-item" style="height: 240px;">

                            <div class="d-flex w-100 justify-content-between ">
                                <small>@jobApplication.ApplicationStatus</small>
                            </div>

                            <div class="d-flex w-100 justify-content-between ">
                                <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; ellipsis; white-space: normal;">
                                    Job offer: @jobApplication.JobOffer.Name
                                </p>
                            </div>
                            @if (User.IsInRole("Jobseeker") || User.IsInRole("Admin"))
                            {
                                <div class="d-flex w-100 justify-content-between ">
                                    <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; ellipsis; white-space: normal;">
                                        Company: @jobApplication.Company.Name
                                    </p>
                                </div>

                                <div class="d-flex w-100 justify-content-between ">
                                    <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; ellipsis; white-space: normal;">
                                        Location: @jobApplication.Company.Location
                                    </p>
                                </div>
                            }

                           
                                <div class="d-flex w-100 justify-content-between ">
                                    <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; ellipsis; white-space: normal;">
                                        Jobseeker: @jobApplication.Jobseeker.TitlesBeforeName  @jobApplication.Jobseeker.FirstName @jobApplication.Jobseeker.LastName @jobApplication.Jobseeker.TitlesAfterName
                                    </p>
                                </div>

                                <div class="d-flex w-100 justify-content-between ">
                                    <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; ellipsis; white-space: normal;">
                                        Education: @jobApplication.Jobseeker.HighestEducation
                                    </p>
                                </div>
                            

                            @{ if (jobApplication.ApplicationStatus == DataAccessLayer.Enums.ApplicationStatus.Undecided)
                                {
                                    <div class="btn-group d-flex w-100 align-content-end">
                                        @if (User.IsInRole("Company") || User.IsInRole("Admin"))
                                        {
                                            <button class="btn btn-success" id="btnSubmit" type="submit" onclick="location.href = '@Url.Action("ChangeStatus", "JobApplication", new { id = jobApplication.Id, accepted = true })'">Accept</button>
                                            <button class="btn btn-danger" id="btnSubmit" type="submit" onclick="location.href = '@Url.Action("ChangeStatus", "JobApplication", new { id = jobApplication.Id, accepted = false })'">Reject</button>
                                        }
                                        @if (User.IsInRole("Admin") || User.IsInRole("Jobseeker"))
                                        {
                                            <button class="btn btn-danger" id="btnSubmit" type="submit" onclick="location.href = '@Url.Action("Cancel", "JobApplication", new { jobApplicationId = jobApplication.Id})'">Cancel</button>
                                        }
                                    </div>
                                }
                            }
                        </div>
                    

                }}
        </div>
    </div>
</div>
<div class="row justify-content-center">
    @Html.PagedListPager(Model.JobApplications, page => Url.Action("Index", new { page }), new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
</div>

<script>
    function GoToDetail(id) {
        window.location = "/jobApplication/Details/" + id;
    }
</script>

@section scripts{
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.js")
    @Scripts.Render("~/Scripts/slider.js")
}