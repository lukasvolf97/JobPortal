@using X.PagedList.Mvc
@using Humanizer
@model PresentationLayer.Models.JobApplicationListViewModel

@{
    ViewBag.Title = "jobApplicationListView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head{
    @Styles.Render("~/Content/css/tree.css")
    @Styles.Render("~/Content/css/PagedList.css")
    @Styles.Render("~/Content/themes/base/jquery-ui.css")
}

<div class="row w-100 p-3">
    <div class="col-lg-12">
        @using (Html.BeginForm())
        {

            @*<div class="form-group form-row mb-4 border rounded-pill p-1">
                @Html.EditorFor(model => model.Filter.SearchCriteria, new { htmlAttributes = new { @placeholder = "What are you looking for?", @class = "col-lg-12 form-control bg-none border-0" } })
                @Html.ValidationMessageFor(model => model.Filter.SearchCriteria, "", new { @class = "text-danger" })

            </div>*@
          
            <br />

            <div class="form-group form-row col-md-5">
                @Html.LabelFor(model => model.Filter.SortCriteria, "Sort by:", new { @class = "col-form-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Filter.SortCriteria, Model.AllSortCriteria, "Select...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Filter.SortCriteria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-check form-row col-md-5">
                @Html.LabelFor(model => model.Filter.SortAscending, "Ascending", new { @class = "form-check-label" })
                @Html.CheckBoxFor(model => model.Filter.SortAscending, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.ValidationMessageFor(model => model.Filter.SortAscending, "", new { @class = "text-danger" })
            </div>

            <div class="row btn-toolbar justify-content-around" role="toolbar" style="margin-bottom:5px">
                <div class="btn-group">
                    <input type="button" class="btn btn-danger" value="Clear" onclick="resetRange();location.href = '@Url.Action("ClearFilter", "JobApplication")'" />
                </div>
                <div class="btn-group">
                    <button class="btn btn-success" id="btnSubmit" type="submit" onclick="saveRange()">Filter </button>
                </div>
            </div>
        }

    </div>
</div>
<div class="row w-100 p-3">
    <div class="col-lg-12">
        <div class="list-group text-center">
            @{foreach (var jobApplication in Model.JobApplications)
                {
                    <div class="list-group-item list-group-item-action clickable-area" style="height: 120px;" @("onclick=GoToDetail('" + jobApplication.Id + "')")>
                        <div class="d-flex w-100 justify-content-between ">
                            @*<h3 class="mb-3" style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" id="thumbnail-label">@jobApplication.Name</h3>*@
                            <small>@jobApplication.ApplicationStatus</small>
                        </div>


                        @*@if (jobApplication.Company.Location != null)
                        {
                            <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; text-overflow: ellipsis; white-space: normal;">
                                @jobApplication.Company.Name (Location: @jobApplication.Company.Location, Phone Number: @jobApplication.Company.PhoneNumber)
                            </p>
                        }
                        else
                        {
                            <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; text-overflow: ellipsis; white-space: normal;">
                                @jobApplication.Company.Name (Phone Number: @jobApplication.Company.PhoneNumber)
                            </p>
                        }*@
                        <div class="d-flex w-100 justify-content-between ">
                            <p class="mb-1" style="width: 100%; overflow: hidden; text-align:left; ellipsis; white-space: normal;">
                                Location: @jobApplication.Id
                            </p>
                            @*<span class="badge badge-pill badge-warning">@jobApplication.JobOffer</span>*@
                        </div>
                    </div>
                }}
        </div>
    </div>
</div>
<div class="row justify-content-center">
    @Html.PagedListPager(Model.JobApplications, page => Url.Action("Index", new { page }), new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
</div>

<script>
    function GoToDetail(id) {
        window.location = "/jobApplication/Details/" + id;
    }
</script>

@section scripts{
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.js")
    @Scripts.Render("~/Scripts/slider.js")
}